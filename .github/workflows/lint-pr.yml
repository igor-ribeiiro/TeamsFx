name: "Lint PR"

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize

jobs:
  pr-title:
    runs-on: ubuntu-latest
    steps:
      # Please look up the latest version from
      # https://github.com/amannn/action-semantic-pull-request/releases
      - uses: amannn/action-semantic-pull-request@v3.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-format:
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'edited' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{github.event.pull_request.head.repo.full_name}}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup Project
        run: |
          npm run setup

      - name: prettier check files in PR on Fork
        if: ${{ github.event.pull_request.head.repo.full_name != 'OfficeDev/TeamsFx' }}
        run: |
          git remote add upstream https://github.com/OfficeDev/TeamsFx.git
          git fetch upstream ${{ github.event.pull_request.base.ref }}
          VAR=$(realpath .github/scripts/lint-pr.sh)
          npx lerna exec -- bash $VAR upstream/${{ github.event.pull_request.base.ref }}

      - name: prettier check files in PR on local
        if: ${{ github.event.pull_request.head.repo.full_name == 'OfficeDev/TeamsFx' }}
        run: |
          VAR=$(realpath .github/scripts/lint-pr.sh)
          npx lerna exec -- bash $VAR origin/${{ github.event.pull_request.base.ref }}

      - name: Check if there are changes
        id: changes
        run: |
          git add .
          VAR=$(git diff --cached --name-only)
          if [ ! -z "$VAR" ]
          then 
            echo '======================================= Prompt Information ==============================================='
            echo 'There may be some unformatted files in your PR, please run these commands on Git Bash terminal: '
            echo '1. npm run setup'
            echo '2. VAR=$(realpath .github/scripts/lint-pr.sh) '
            echo '3. npx lerna exec -- bash $VAR ${your-PR-target-branch}'
            echo 'please replace the ${your-PR-target-branch} as the target branch of your PR, such as origin/dev or upstream/dev'
            exit 1
          fi
